{
	"name": "dfFileConverterCsvToParquet_Param",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ordercsv",
						"type": "DatasetReference"
					},
					"name": "orderstream"
				},
				{
					"dataset": {
						"referenceName": "OrderItemcsv",
						"type": "DatasetReference"
					},
					"name": "OrderItems"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DailyProductRevenueParquet",
						"type": "DatasetReference"
					},
					"name": "DailyRevenueParquet"
				}
			],
			"transformations": [
				{
					"name": "orderStatusFilter"
				},
				{
					"name": "OrderJoinOrderItem"
				},
				{
					"name": "DailyProductRevenue"
				}
			],
			"scriptLines": [
				"source(output(",
				"          order_id as integer,",
				"          order_date as timestamp,",
				"          order_customer_id as integer,",
				"          order_status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> orderstream",
				"source(output(",
				"          order_item_id as short,",
				"          order_item_order_id as short,",
				"          order_item_product_id as short,",
				"          order_item_quantity as short,",
				"          order_item_subtotal as double,",
				"          order_item_product_price as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> OrderItems",
				"orderstream filter(order_status=='COMPLETE'|| order_status=='CLOSED') ~> orderStatusFilter",
				"orderStatusFilter, OrderItems join(order_id == order_item_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> OrderJoinOrderItem",
				"OrderJoinOrderItem aggregate(groupBy(order_date,",
				"          order_item_product_id),",
				"     revenue = round(sum(order_item_subtotal),2)) ~> DailyProductRevenue",
				"DailyProductRevenue sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1) ~> DailyRevenueParquet"
			]
		}
	}
}